#
# 16 Terminal Colors
# -- ---------------
#  0 black
#  1 red
#  2 green
#  3 yellow
#  4 blue
#  5 magenta
#  6 cyan
#  7 white
#  8 bright black
#  9 bright red
# 10 bright green
# 11 bright yellow
# 12 bright blue
# 13 bright magenta
# 14 bright cyan
# 15 bright white
#

# load dependencies
pmodload 'helper'

function prompt_jml_async_callback {
  case $1 in
    prompt_jml_async_git )
      # We can safely split on ':' because it isn't allowed in ref names.
      IFS=':' read _git_target _git_post_target <<<"$3"

      # The target actually contains 3 space separated possibilities, so we need to
      # make sure we grab the first one.
      if [[ -z "$_git_target" ]]; then
        # No git target detected, flush the git fragment and redisplay the prompt.
        if [[ -n "$_prompt_jml_git" ]]; then
          _prompt_jml_git=''
          zle && zle reset-prompt
        fi
      else
        # Git target detected, update the git fragment and redisplay the prompt.
        _prompt_jml_git="${_git_target}${_git_post_target}"
        zle && zle reset-prompt
      fi
      ;;
  esac
}

function prompt_jml_async_git {
  cd -q "$1"
  if (( $+functions[git-info] )); then
    git-info
    print ${git_info[status]}
  fi
}

function prompt_jml_async_tasks {
  # Initialize async worker. This needs to be done here and not in
  # prompt_jml_setup so the git formatting can be overridden by other prompts.
  if (( !${prompt_prezto_async_init:-0} )); then
    async_start_worker prompt_jml -n
    async_register_callback prompt_jml prompt_jml_async_callback
    typeset -g prompt_prezto_async_init=1
  fi

  # Kill the old process of slow commands if it is still running.
  async_flush_jobs prompt_jml

  # Compute slow commands in the background.
  async_job prompt_jml prompt_jml_async_git "$PWD"
}

function prompt_jml_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  _prompt_jml_pwd=$(prompt-pwd)

  # Handle updating git data. We also clear the git prompt data if we're in a
  # different git root now.
  if (( $+functions[git-dir] )); then
    local new_git_root="$(git-dir 2> /dev/null)"
    if [[ $new_git_root != $_jml_cur_git_root ]]; then
      _prompt_jml_git=''
      _jml_cur_git_root=$new_git_root
    fi
  fi

  # Run python info (this should be fast and not require any async)
  (( $+functions[python-info] )) && python-info

  # Run ruby info (this should be fast and not require any async)
  (( $+functions[ruby-info] )) && ruby-info

  # Run node info (this should be fast and not require any async)
  (( $+functions[node-info] )) && node-info

  _prompt_jml_devenv=''

  [[ -n "${python_info[version]}" ]] && _prompt_jml_devenv+="${python_info[version]}"
  [[ -n "${python_info[virtualenv]}" ]] && _prompt_jml_devenv+="${python_info[virtualenv]}"

  if [[ -n "${ruby_info[version]}" ]]; then
    [[ -n "${_prompt_jml_devenv}" ]] && _prompt_jml_devenv+=' '
    _prompt_jml_devenv+="${ruby_info[version]}"
  fi

  if [[ -n "${node_info[version]}" ]]; then
    [[ -n "${_prompt_jml_devenv}" ]] && _prompt_jml_devenv+=' '
    _prompt_jml_devenv+="${node_info[version]}"
  fi

  [[ -n "${_prompt_jml_devenv}" ]] && _prompt_jml_devenv="[$_prompt_jml_devenv]"

  prompt_jml_async_tasks
}

function prompt_jml_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_jml_precmd_async_pid=0
  _prompt_jml_precmd_async_data=$(mktemp "${TMPDIR:-/tmp}/jml-prompt-async-XXXXXXXXXX")

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz async && async

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_jml_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{13}❯%F{4}❯%F{6}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{3}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{6}❮%F{4}❮%F{13}❮%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{2}✚%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{13}⬆%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{13}⬇%f%%b'
  zstyle ':prezto:module:git:info:branch' format ' %%B%F{2}%b%f%%b'
  zstyle ':prezto:module:git:info:commit' format ' %%B%F{3}%.7c%f%%b'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{1}✖%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{4}✱%f%%b'
  zstyle ':prezto:module:git:info:position' format ' %%B%F{13}%p%f%%b'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{5}➜%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{6}✭%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{3}═%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{7}◼%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'status' '%b:%s%A%B%S%a%d%m%r%U%u'
    # 'status' '%b %p %s%A%B%S%a%d%m%r%U%u'

  # Set up non-zero return value display
  local show_return="⚠ "
  # Default is to show the return value
  if zstyle -T ':prezto:module:prompt' show-return-val; then
    show_return+='%? '
  fi
  # Set python-info format
  zstyle ':prezto:module:python:info:virtualenv' format '%f@%F{3}%v%f'
  zstyle ':prezto:module:python:info:version' format '%f%F{3}%v%F{7}'
  # Set ruby-info format
  zstyle ':prezto:module:ruby:info:version' format '%F{1}%v%f'
  # Set node-info format
  zstyle ':prezto:module:node:info:version' format '%F{2}%v%f'

  # Get the async worker set up
  _jml_cur_git_root=''

  _prompt_jml_git=''
  _prompt_jml_pwd=''
  _prompt_jml_lhs=''
  _prompt_jml_mid=''
  _prompt_jml_devenv=''

  # Define prompts.
  #
  PROMPT='%B%F{3}%n%b%f %F{6}${_prompt_jml_pwd}%(!. %B%F{1}#%f%b.) %f%b${_prompt_jml_devenv}%f%b'
  PROMPT+=$'\n'
  PROMPT+='${editor_info[keymap]} '
  RPROMPT='${editor_info[overwrite]}%(?:: %F{3}'
  RPROMPT+=${show_return}
  RPROMPT+='%f)${_prompt_jml_git}'
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_jml_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2>/dev/null
  prompt_preview_theme 'jml'
}

prompt_jml_setup "$@"

#  vim: set ts=8 sw=2 tw=0 ft=zsh noet :
