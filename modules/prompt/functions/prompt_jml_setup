pmodload 'helper'
# source "${ZEXTRA_DIR}/lib/prompt_info_functions.zsh"

function prompt_jml_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]
  then
    _prompt_jml_pwd="$MATCH"
    unset MATCH
  else
    _prompt_jml_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
  fi
}

function prompt_jml_git_info {
  if (( _prompt_jml_precmd_async_pid > 0 )); then
    # Append Git status.
    if [[ -s "$_prompt_jml_precmd_async_data" ]]; then
      alias typeset='typeset -g'
      source "$_prompt_jml_precmd_async_data"
      ruby-info
      RPROMPT+='${ruby_info[version]} '
      RPROMPT+='${git_info:+${(e)git_info[status]}}'
      unalias typeset
    fi

    # Reset PID.
    _prompt_jml_precmd_async_pid=0

    # Redisplay prompt.
    zle && zle reset-prompt
  fi
}

function prompt_jml_precmd_async {
# Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_jml_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -WINCH $$
}

function prompt_jml_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  prompt_jml_pwd

  # Define prompts.
  RPROMPT='${editor_info[overwrite]}%(?:: %F{3}⚠  %f)${VIM:+" %B%F{6}V%f%b"}'

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_jml_precmd_async_pid > 0 )); then
    kill -KILL "$_prompt_jml_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_jml_git_info WINCH
  prompt_jml_precmd_async &!
  _prompt_jml_precmd_async_pid=$!
}

function prompt_jml_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_jml_precmd_async_pid=0
  _prompt_jml_precmd_async_data="${TMPPREFIX}-prompt_jml_data"

  # Load required functions.
  autoload -Uz add-zsh-hook
  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_jml_precmd

  _prompt_jml_colors=(
    "%F{cyan}"    # 6
    "%F{yellow}"  # 3
    "%F{magenta}" # 5
    "%F{red}"     # 1
    "%F{green}"   # 2
  )

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format ' %B%F{13}❯%F{4}❯%F{6}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format ' %F{3}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format ' %B%F{6}❮%F{4}❮%F{13}❮%f%b'

  # Ruby Version
  zstyle ':prezto:module:ruby:info:version' format '%F{1}%v%f@%F{4}%g%f'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{2}✚%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{13}⬆%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{13}⬇%f%%b'
  zstyle ':prezto:module:git:info:branch' format ' %%B%F{2}%b%f%%b'
  zstyle ':prezto:module:git:info:commit' format ' %%B%F{3}%.7c%f%%b'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{1}✖%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{4}✱%f%%b'
  zstyle ':prezto:module:git:info:position' format ' %%B%F{13}%p%f%%b'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{5}➜%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{6}✭%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{3}═%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{7}◼%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'status' '$(coalesce "%b" "%p" "%c")%s%A%B%S%a%d%m%r%U%u'

  # Define prompts.
  PROMPT='%B%F{3}%n%b%f %F{6}${_prompt_jml_pwd}%f%(!. %B%F{1}#%f%b.)${editor_info[keymap]} %(?::%F{4}[%?]%f )'
  RPROMPT=
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_jml_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2>/dev/null
  prompt_preview_theme 'jml'
}

prompt_jml_setup "$@"

#  vim: set ts=8 sw=2 tw=0 ft=zsh noet :
